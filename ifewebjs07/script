'use strict'
//获取dom节点-id
function $id (id) {
	return document.getElementById(id);
}
var myroot=$id('root');//获取dom树的根节点

//前序中序后序遍历的函数，利用栈（数组）来保存dom树和子树的根节点,递归遍历，node.children[i]是只读属性
//容易出错，如果出错将换成firstElementChild与lastElementChild
//前序
var nodearr=[];
function dlrtraver (node,nodearr) {
	if(!node==null){
		nodearr.push(node);
		dlrtraver(node.children[0],nodearr);
        dlrtraver(node.children[1],nodearr);
	}
}
//中序
function ldrtraver (node,nodearr) {
	if(!node==null){
        ldrtraver(node.children[0],nodearr);
        nodearr.push(node);
        ldrtraver(node.children[1],nodearr);
	}
}
//后序
function lrdtraver (node,nodearr) {
	if(!node==null){
        lrdtraver(node.children[0],nodearr);
        lrdtraver(node.children[1],nodearr);
        nodearr.push(node);
	}
}
//统一触发btn的函数;
function traver (e) {
	var e=e || window.e,
    target=e.target || e.srcElement;
    switch(target.id){
    	case 'dlr':
    		dlrtraver(myroot,nodearr)
    		break;
    	case 'ldr':
    		ldrtraver(myroot,nodearr)
    		break;
    	case 'lrd':
    		lrdtraver(myroot,nodearr)
    		break;
    }
}
//change_style()给遍历的节点添加额外的样式running-背景颜色变成黄色
function change_style (ele) {
    ele.style.backgroundColor='#ff0';
}
//设置动画,利用setInterval每1000ms运行一次

//各个btn的监听事件
window.onload=function() {
	$id('dlr').addEventListener('click',traver);
	$id('ldr').addEventListener('click',traver);
	$id('lrd').addEventListener('click',traver);
}
